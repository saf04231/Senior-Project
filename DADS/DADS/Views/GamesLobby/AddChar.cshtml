@model DADS.player_sheets

@{
    ViewBag.Title = "AddCharacter";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>AddCharacter</h2>

<div class="main-body">
    @using (Html.BeginForm())
    {
        <div class="form-horizontal">
            <h4>New PLayer Sheet!</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <h6 class="control-label col-md-2">Name</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Description</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control",  } })
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Spells</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.spells, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.spells, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Notes</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.notes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                </div>
            </div>
        </div>



        <div class="form-horizontal">
            <h4>Money</h4>
            <hr />
            <div class="form-group">
                <h6 class="control-label col-md-2">CP</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.statslist.cp, new { htmlAttributes = new { @class = "form-control" }
    })
                    @Html.ValidationMessageFor(model => model.statslist.cp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">SP</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.statslist.sp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.statslist.sp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">GP</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.statslist.gp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.statslist.gp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">PP</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.statslist.pp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.statslist.pp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                </div>
            </div>
        </div>


















        <div class="form-horizontal">
            <h4>Stats</h4>
            <hr />
            <div class="form-group">
                <h6 class="control-label col-md-2">Experience Points</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.statslist.exp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.statslist.exp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Proficiency Bonus</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.statslist.proficiencyBonus, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.statslist.proficiencyBonus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Strength</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.statslist.strength, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.statslist.strength, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Dexterity</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.statslist.dexterity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.statslist.dexterity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Constitution</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.statslist.constitution, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.statslist.constitution, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Dexterity</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.statslist.dexterity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.statslist.dexterity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Intelligence</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.statslist.intelligence, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.statslist.intelligence, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Wisdom</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.statslist.wisdom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.statslist.wisdom, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Charisma</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.statslist.charisma, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.statslist.charisma, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Passive Wisdom</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.statslist.passiveWisdom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.statslist.passiveWisdom, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                </div>
            </div>
        </div>













        <div class="form-horizontal">
            <h4>Weapons</h4>
            <hr />

            <h5 class="control-label col-md-2">Weapon 1</h5>

            <div class="form-group">
                <h6 class="control-label col-md-2">Name</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.weapon1.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.weapon1.name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Description</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.weapon1.description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.weapon1.description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Damage</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.weapon1.damage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.weapon1.damage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Types</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.weapon1.types, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.weapon1.types, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                </div>
            </div>






            <h5 class="control-label col-md-2">Weapon 2</h5>

            <div class="form-group">
                <h6 class="control-label col-md-2">Name</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.weapon2.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.weapon2.name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Description</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.weapon2.description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.weapon2.description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Damage</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.weapon2.damage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.weapon2.damage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Types</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.weapon2.types, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.weapon2.types, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                </div>
            </div>




            <h5 class="control-label col-md-2">Weapon 3</h5>

            <div class="form-group">
                <h6 class="control-label col-md-2">Name</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.weapon3.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.weapon3.name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Description</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.weapon3.description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.weapon3.description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Damage</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.weapon3.damage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.weapon3.damage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Types</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.weapon3.types, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.weapon3.types, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                </div>
            </div>



        </div>
















































    <input type="submit" value="Create" class="btn btn-default" />

}
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
