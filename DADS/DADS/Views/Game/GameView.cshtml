@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col">
        <div id="map" style="position:relative">
            <div id="btnPanel" class="btn-group" style="position:absolute;top:5px;left:5px;z-index:1;border:1px black solid">
                <button class="btn btn-light" id="chngMapBtn">Change map</button>
                <button class="btn btn-light" id="addActBtn">Add actors</button>
                <button class="btn btn-light" id="eraseBtn">Erase</button>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        var canvasDiv = document.getElementById('map');
        var canvas = document.createElement('canvas');

        var clickX = new Array();
        var clickY = new Array();
        var clickDrag = new Array();
        var paint;

        canvas.setAttribute("height", canvasDiv.offsetWidth/2);
        canvas.setAttribute("width", canvasDiv.offsetWidth/2);

        canvas.setAttribute('style', "border:1px black solid");
        canvas.setAttribute('id', "canvas");
        canvasDiv.appendChild(canvas);
        if (typeof G_vmlCanvasManager != 'undefined') {
            canvas = G_vmlCanvasManager.initElement(canvas);
        }
        ctx = canvas.getContext("2d");

        /* taken from http://www.williammalone.com/articles/create-html5-canvas-javascript-drawing-app/ */
        $('#canvas').mousedown(function (e){
            var mouseX = e.pageX - this.offsetLeft;
            var mouseY = e.pageY - this.offsetTop;

            paint = true;
            addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop);
            redraw();
        });

        $('#canvas').mousemove(function (e) {
            if (paint) {
                addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop, true);
                redraw();
            }
        });

        $('#canvas').mouseup(function (e) {
            paint = false;
        });

        $('#canvas').mouseleave(function (e) {
            paint = false;
        });

        $('#eraseBtn').click(function () {
            clickX = new Array();
            clickY = new Array();
            clickDrag = new Array();
            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
        });

        function addClick(x, y, dragging) {
            clickX.push(x);
            clickY.push(y);
            clickDrag.push(dragging);
        }

        function redraw() {
            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);

            ctx.strokeStyle = "#000000";
            ctx.lineJoin = "round";
            ctx.lineWidth = 5;

            for (var i = 0; i < clickX.length; i++) {
                ctx.beginPath();
                if (clickDrag[i] && i) {
                    ctx.moveTo(clickX[i - 1], clickY[i - 1]);
                } else {
                    ctx.moveTo(clickX[i] - 1, clickY[i]);
                }
                ctx.lineTo(clickX[i], clickY[i]);
                ctx.closePath();
                ctx.stroke();
            }
        }
    </script>

    <div class="col">
        <ul class="nav nav-tabs bg-light nav-justified" role="tablist">
            <li class="nav-item active">
                <a class="nav-link" href="#characterSheetPanel" data-toggle="tab" role="tab">Character Sheet</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#chatPanel" data-toggle="tab" role="tab">Chat</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#actorPanel" data-toggle="tab" role="tab">Actors</a>
            </li>
        </ul>

        <div class="tab-content" id="tabContent">
            <div class="tab-pane fade show active" id="characterSheetPanel" role="tabpanel" aria-labelledby="cs-tab">Character Sheet</div>
            <div class="tab-pane fade" id="actorPanel" role="tabpanel" aria-labelledby="actor-tab">Actors</div>
            <div class="tab-pane fade" id="chatPanel" role="tabpanel" aria-labelledby="chat-tab">Chat</div>
        </div>
    </div>
</div>

